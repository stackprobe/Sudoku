各ファイルは省略可能

グループの矛盾は不正解を正解としてしまいかねないのでちゃんと見る。
条件の矛盾はあまり見ない。

全てのグループのセルが確定したら正解と見なす。
枠外(グループに属さないセル)の固定値・条件はエラーにする。


----


【入力データ形式】

Frame.csv
	フレーム数
#	フレーム数分繰り返す {
		横位置, 縦位置
		ブロック幅, ブロック高
		対角線上
#	}

	フレーム数: 0～
	横位置: 0～
	縦位置: 0～
	ブロック幅: 2～
	ブロック高: 2～
	対角線上:
		0 == 無効
		1 == 有効

	縦 + 横 + ブロック (+ 対角線) をグループと見なす。
	各グループには (1～サイズ) の数値が入る。
	サイズ == ブロック幅 x ブロック高

Square.csv
	フレーム数
#	フレーム数分繰り返す {
		横位置, 縦位置
		サイズ
		対角線上
#	}

	フレーム数: 0～
	横位置: 0～
	縦位置: 0～
	サイズ: 1～
	対角線上:
		0 == 無効
		1 == 有効

	縦 + 横 (+ 対角線) をグループと見なす。
	各グループには (1～サイズ) の数値が入る。

Group.csv
	グループ数
#	グループ数分繰り返す {
		セル数
#		セル数分繰り返す {
			X, Y
#		}
#	}

	グループ数: 0～
	セル数: 1～
	X: 0～
	Y: 0～

	各グループには (1～セル数) の数値が入る。

	エラーとするもの {
		セルの重複
		セル数(最大値)より大きい固定値
		固定値の重複
	}

XInequal.csv
#	行数分繰り返す {
		不等号, 不等号, 不等号... # (桁数-1)分繰り返す
#	}

YInequal.csv
#	(行数-1)分繰り返す {
		不等号, 不等号, 不等号... # 桁数分繰り返す
#	}

	不等号:
		"" == 関係ナシ
		1 == ここ < 次
		2 == ここ > 次

XJoint.csv
#	行数分繰り返す {
		ジョイント, ジョイント, ジョイント... # (桁数-1)分繰り返す
#	}

YJoint.csv
#	(行数-1)分繰り返す {
		ジョイント, ジョイント, ジョイント... # 桁数分繰り返す
#	}

	ジョイント:
		"" == 関係ナシ
		1 == ジョイント有り ... 差の絶対値が 1
		2 == ジョイント無し ... 差の絶対値が 2 以上

Condition.csv
#	行数分繰り返す {
		条件, 条件, 条件... # 桁数分繰り返す
#	}

	条件:
		"" == 条件ナシ
		1 == 奇数
		2 == 偶数

Relation.csv
	リレーション数
#	リレーション数分繰り返す {
		関係
		X1, Y1
		X2, Y2
#	}

	関係:
		1 == ジョイント有り
		2 == ジョイント無し
		3 == (X1, Y1) < (X2, Y2)
		4 == (X1, Y1) > (X2, Y2)
	X1: 0～
	Y1: 0～
	X2: 0～
	Y2: 0～

	エラーとするもの {
		自分のセルと連結している。
	}

Input.csv
#	行数分繰り返す {
		固定値, 固定値, 固定値... # 桁数分繰り返す
#	}

	固定値:
		"" == 未確定または枠外
		1～ == 固定値


----


【出力データ形式】

Output.csv
#	行数分繰り返す {
		確定値, 確定値, 確定値... # 桁数分繰り返す
#	}

	確定値:
		"" == 枠外
		1～ == 確定値

	成功時に出力する。

Error.csv
	エラー番号
	場所数
#	場所数分繰り返す {
		X, Y
#	}

	エラー番号: 0～
	場所数: 0～
	X: 0～
	Y: 0～

	失敗時に「場合によって」出力する。
